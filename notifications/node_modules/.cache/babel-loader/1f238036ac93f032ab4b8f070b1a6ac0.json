{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-test\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport ReactPaginate from \"react-paginate\";\nimport mockData from \"../mockData.js\";\nimport { FaPen } from 'react-icons/fa';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination() {\n  _s();\n\n  const [profile, setProfile] = useState(mockData.slice(0, 100));\n  const [pageNum, setPageNum] = useState(0);\n  const cardsPerPage = 8;\n  const pagesVisited = pageNum * cardsPerPage;\n  const AllReports = profile.slice(pagesVisited, pagesVisited + cardsPerPage).map(profile => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"ID: \", profile.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 30\n        }, this), \"mm dd yy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.thumbnailUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name:\", profile.title, \" status: n/a\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txtCenter\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txtCenter\",\n        children: \"location: n/a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txtCenter\",\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btnSm\",\n        children: [\" edit \", /*#__PURE__*/_jsxDEV(FaPen, {\n          size: \"1.5em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n  const pageCount = Math.ceil(profile.length / cardsPerPage);\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNum(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [AllReports, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      pageCount: pageCount,\n      onPageChange: changePage //pagination styles \n      ,\n      containerClassName: \"paginationBtns\",\n      previousLinkClassName: \"\",\n      nextLinkClassName: \"\",\n      disabledClassName: \"\",\n      activeClassName: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 15\n  }, this);\n}\n\n_s(Pagination, \"X9Hn4qVjd+gLW8dy0qlqC29p7H8=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/react-test/src/components/Pagination.js"],"names":["ReactPaginate","mockData","FaPen","React","useState","Pagination","profile","setProfile","slice","pageNum","setPageNum","cardsPerPage","pagesVisited","AllReports","map","id","thumbnailUrl","title","pageCount","Math","ceil","length","changePage","selected"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;AAGA,SAASC,UAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBH,QAAQ,CAACH,QAAQ,CAACO,KAAT,CAAe,CAAf,EAAiB,GAAjB,CAAD,CAArC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMO,YAAY,GAAG,CAArB;AACA,QAAMC,YAAY,GAAGH,OAAO,GAAGE,YAA/B;AACA,QAAME,UAAU,GAAGP,OAAO,CACzBE,KADkB,CACZI,YADY,EACEA,YAAY,GAAGD,YADjB,EAElBG,GAFkB,CAEZR,OAAD,IAAa;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEC;AAAA,2BAAUA,OAAO,CAACS,EAAlB,oBAAsB;AAAA;AAAA;AAAA;AAAA,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAK,QAAA,GAAG,EAAIT,OAAO,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAA,4BAAWV,OAAO,CAACW,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAMC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,eAOC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD,eAQC;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAAA,0CAAgC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaC,GAhBgB,CAAnB;AAkBE,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUd,OAAO,CAACe,MAAR,GAAeV,YAAzB,CAAlB;;AACA,QAAMW,UAAU,GAAE,QAAgB;AAAA,QAAf;AAACC,MAAAA;AAAD,KAAe;AAChCb,IAAAA,UAAU,CAACa,QAAD,CAAV;AACD,GAFD;;AAIE,sBAAQ;AAAA,eAAMV,UAAN,eACN,QAAC,aAAD;AACE,MAAA,aAAa,EAAE,MADjB;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,SAAS,EAAEK,SAHb;AAIE,MAAA,YAAY,EAAEI,UAJhB,CAKA;AALA;AAME,MAAA,kBAAkB,EAAE,gBANtB;AAOE,MAAA,qBAAqB,EAAE,EAPzB;AAQE,MAAA,iBAAiB,EAAE,EARrB;AASE,MAAA,iBAAiB,EAAE,EATrB;AAUE,MAAA,eAAe,EAAE;AAVnB;AAAA;AAAA;AAAA;AAAA,YADM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAYL;;GAxCQjB,U;;KAAAA,U;AA0CT,eAAeA,UAAf","sourcesContent":["import ReactPaginate from \"react-paginate\";\r\nimport mockData from \"../mockData.js\";\r\nimport {FaPen} from 'react-icons/fa';\r\nimport React, { useState} from \"react\";\r\n\r\n\r\nfunction Pagination(){\r\n  const [profile, setProfile]= useState(mockData.slice(0,100));\r\n  const [pageNum, setPageNum] = useState(0)\r\n  const cardsPerPage = 8;             \r\n  const pagesVisited = pageNum * cardsPerPage;  \r\n  const AllReports = profile\r\n  .slice(pagesVisited, pagesVisited + cardsPerPage)\r\n  .map( (profile) => {\r\n    return (\r\n      <div className=\"card\">\r\n\r\n       <div>ID: {profile.id} <br></br>mm dd yy</div>\r\n       <img src = {profile.thumbnailUrl}/>\r\n       <div>name:{profile.title} status: n/a</div>\r\n       <div className=\"txtCenter\">Type</div>\r\n       <div className=\"txtCenter\">location: n/a</div>\r\n       <div className=\"txtCenter\">0</div>\r\n       <button className=\"btnSm\"> edit <FaPen size=\"1.5em\"/> </button>\r\n\r\n    </div>\r\n      ) \r\n    })\r\n\r\n    const pageCount = Math.ceil(profile.length/cardsPerPage)\r\n    const changePage =({selected}) => {\r\n      setPageNum(selected);\r\n    }\r\n\r\n      return (<div>{AllReports}\r\n        <ReactPaginate\r\n          previousLabel={\"prev\"}\r\n          nextLabel={\"next\"}\r\n          pageCount={pageCount}\r\n          onPageChange={changePage}\r\n        //pagination styles \r\n          containerClassName={\"paginationBtns\"}\r\n          previousLinkClassName={\"\"}\r\n          nextLinkClassName={\"\"}\r\n          disabledClassName={\"\"}\r\n          activeClassName={\"\"} /> </div>)\r\n}\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}