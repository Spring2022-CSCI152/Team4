{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-test\\\\src\\\\components\\\\AllList.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport FetchAllReports from \"./FetchAllReports\";\nimport React, { useState } from \"react\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nconst x = \"x\";\nconsole.log(\"some{$x}thing\");\n\nconst fetchAll = async pageNum => {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\n  return res.json();\n};\n\nconst AllList = () => {\n  _s();\n\n  const [pageNum, setPageNum] = useState(1);\n  const {\n    data,\n    status\n  } = useQuery(['all', pageNum], () => fetchAll(pageNum));\n  console.log(\"data \", data, \"page\", pageNum);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AllList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading. Please Wait\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error fetching data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(FetchAllReports, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPageNum(pageNum => pageNum - 1),\n        disabled: pageNum === 1,\n        children: \" Prev \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPageNum(pageNum => pageNum + 1),\n        disabled: pageNum === 5,\n        children: \" Next \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AllList, \"IukWTcWPpWIL2fYv2GAr6yKiKmk=\", false, function () {\n  return [useQuery];\n});\n\n_c = AllList;\nexport default function Wrapped() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(AllList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Wrapped;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AllList\");\n$RefreshReg$(_c2, \"Wrapped\");","map":{"version":3,"sources":["D:/react-test/src/components/AllList.js"],"names":["react","FetchAllReports","React","useState","QueryClient","QueryClientProvider","useQuery","queryClient","x","console","log","fetchAll","pageNum","res","fetch","json","AllList","setPageNum","data","status","map","item","id","Wrapped"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,aAA3D;;;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;AAEA,MAAMI,CAAC,GAAC,GAAR;AAEAC,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,OAAP,IAAmB;AAClC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,+DAA8DF,OAAQ,EAAxE,CAAvB;AACA,SAAOC,GAAG,CAACE,IAAJ,EAAP;AACD,CAHD;;AAMA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACJ,OAAD,EAAUK,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAEe,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBb,QAAQ,CAAC,CAAC,KAAD,EAAQM,OAAR,CAAD,EAAkB,MAAMD,QAAQ,CAACC,OAAD,CAAhC,CAAjC;AACCH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,IAArB,EAA2B,MAA3B,EAAmCN,OAAnC;AAGD,sBACE;AAAA,4BACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGO,MAAM,KAAK,SAAX,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH3B,EAIGA,MAAM,KAAK,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJzB,EAKGA,MAAM,KAAK,SAAX,iBACC;AAAA,kBACGD,IAAI,CAACE,GAAL,CAAUC,IAAD,iBAAW,QAAC,eAAD;AAA+B,UAAA,IAAI,EAAEA;AAArC,WAAsBA,IAAI,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA,gBAApB;AADH;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAaA;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAG,MAAKL,UAAU,CAAGL,OAAD,IAAYA,OAAO,GAAC,CAAtB,CAAjC;AACA,QAAA,QAAQ,EAAEA,OAAO,KAAK,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,OAAO,EAAG,MAAKK,UAAU,CAAGL,OAAD,IAAYA,OAAO,GAAC,CAAtB,CAAjC;AACA,QAAA,QAAQ,EAAEA,OAAO,KAAK,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA,kBADF;AA0BD,CAhCD;;GAAMI,O;UAEqBV,Q;;;KAFrBU,O;AAmCN,eAAe,SAASO,OAAT,GAAmB;AAChC,sBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEhB,WAA7B;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MANuBgB,O","sourcesContent":["import react from \"react\";\r\nimport FetchAllReports from \"./FetchAllReports\";\r\nimport React, { useState} from \"react\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst x=\"x\"\r\n\r\nconsole.log(\"some{$x}thing\")\r\n\r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\r\n  return res.json();\r\n}\r\n\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n   console.log(\"data \", data, \"page\", pageNum);\r\n \r\n\r\n  return (  \r\n    <>\r\n    <div>\r\n      <h2>AllList</h2>\r\n \r\n      {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n      {status === \"error\" && <div>Error fetching data</div>}\r\n      {status === \"success\" && (\r\n        <div>\r\n          {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n    <div>\r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum-1)} \r\n      disabled={pageNum === 1 }> Prev </button>\r\n    \r\n\r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum+1)} \r\n      disabled={pageNum === 5 }> Next </button>\r\n      </div> \r\n    </>\r\n     \r\n\r\n  );\r\n};\r\n\r\n\r\nexport default function Wrapped() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AllList />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}