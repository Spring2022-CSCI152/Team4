{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-test\\\\src\\\\components\\\\AllList.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport FetchAllReports from \"./FetchAllReports\";\nimport React, { useState } from \"react\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nconst fetchAll = async pageNum => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/photos/?_limit=5&_${pageNumber}');\n  return res.json();\n};\n\nconst AllList = () => {\n  _s();\n\n  const [pageNum, setPageNum] = useState(1);\n  const {\n    data,\n    status\n  } = useQuery(['all', pageNum], () => fetchAll(pageNum));\n\n  const handlePageClick = pageNum => {\n    console.log(pageNum.selected);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      breakLabel: \"...\",\n      pageCount: 15,\n      marginPagesDisplayed: 1,\n      pageRangeDisplayed: 2,\n      onPageChange: handlePageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AllList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading. Please Wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(FetchAllReports, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllList, \"IukWTcWPpWIL2fYv2GAr6yKiKmk=\", false, function () {\n  return [useQuery];\n});\n\n_c = AllList;\nexport default function Wrapped() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(AllList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Wrapped;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AllList\");\n$RefreshReg$(_c2, \"Wrapped\");","map":{"version":3,"sources":["D:/react-test/src/components/AllList.js"],"names":["react","FetchAllReports","React","useState","QueryClient","QueryClientProvider","useQuery","queryClient","fetchAll","pageNum","res","fetch","json","AllList","setPageNum","data","status","handlePageClick","console","log","selected","map","item","id","Wrapped"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,aAA3D;;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;;AAGA,MAAMI,QAAQ,GAAG,MAAOC,OAAP,IAAmB;AAClC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sEAAD,CAAvB;AACA,SAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACJ,OAAD,EAAUK,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBV,QAAQ,CAAC,CAAC,KAAD,EAAQG,OAAR,CAAD,EAAkB,MAAMD,QAAQ,CAACC,OAAD,CAAhC,CAAjC;;AACA,QAAMQ,eAAe,GAAIR,OAAD,IAAa;AACnCS,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACW,QAApB;AAA+B,GADjC;;AAGE;AAAA;AAAA,2BACJ,QAAC,aAAD;AACE,MAAA,aAAa,EAAE,MADjB;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,UAAU,EAAE,KAHd;AAIE,MAAA,SAAS,EAAE,EAJb;AAKE,MAAA,oBAAoB,EAAE,CALxB;AAME,MAAA,kBAAkB,EAAE,CANtB;AAOE,MAAA,YAAY,EAAEH;AAPhB;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA;;AAaF,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGD,MAAM,KAAK,SAAX,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAH3B,EAIGA,MAAM,KAAK,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJzB,EAKGA,MAAM,KAAK,SAAX,iBACC;AAAA,gBACGD,IAAI,CAACM,GAAL,CAAUC,IAAD,iBAAW,QAAC,eAAD;AAA+B,QAAA,IAAI,EAAEA;AAArC,SAAsBA,IAAI,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA,cAApB;AADH;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1CD;;GAAMV,O;UAEqBP,Q;;;KAFrBO,O;AA4CN,eAAe,SAASW,OAAT,GAAmB;AAChC,sBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEjB,WAA7B;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MANuBiB,O","sourcesContent":["import react from \"react\";\r\nimport FetchAllReports from \"./FetchAllReports\";\r\nimport React, { useState } from \"react\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\n\r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/photos/?_limit=5&_${pageNumber}');\r\n  return res.json();\r\n};\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n  const handlePageClick = (pageNum) => {\r\n    console.log(pageNum.selected);}\r\n\r\n    <div>\r\n<ReactPaginate\r\n  previousLabel={\"prev\"}\r\n  nextLabel={\"next\"}\r\n  breakLabel={\"...\"}\r\n  pageCount={15}\r\n  marginPagesDisplayed={1}\r\n  pageRangeDisplayed={2}\r\n  onPageChange={handlePageClick}\r\n/>\r\n</div>\r\n    \r\n\r\n  return (\r\n    <div>\r\n      <h2>AllList</h2>\r\n  \r\n      {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n      {status === \"error\" && <div>Error fetching data</div>}\r\n      {status === \"success\" && (\r\n        <div>\r\n          {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n        </div>\r\n\r\n    \r\n      )}\r\n    </div>\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default function Wrapped() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AllList />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}