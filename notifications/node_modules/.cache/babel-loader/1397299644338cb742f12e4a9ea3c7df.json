{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-test\\\\src\\\\components\\\\AllList.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport FetchAllReports from \"./FetchAllReports\";\nimport React, { useState } from \"react\";\nimport mockData from \"../mockData.js\";\nimport ReactPaginate from \"react-paginate\";\nimport { FaPen } from 'react-icons/fa';\nimport WatchList from \"./components/WatchList\";\nimport BannedList from \"./components/BannedList\";\nimport UpdatedLogs from \"./components/FetchUpdatedLogs\";\n/* \r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\r\n  return res.json();\r\n}\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n   console.log(\"data \", data, \"page\", pageNum);\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllList() {\n  _s();\n\n  const [profile, setProfile] = useState(mockData.slice(0, 100));\n  const [pageNum, setPageNum] = useState(0);\n  const [tab, setTab] = useState([]); //initial mount on page load\n\n  /*#__PURE__*/\n  _jsxDEV(ReportTabs, {\n    setTab: setTab\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n\n  {\n    tab === \"AllList\" ? /*#__PURE__*/_jsxDEV(AllList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this) : null;\n  }\n  {\n    tab === \"WatchList\" ? /*#__PURE__*/_jsxDEV(WatchList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this) : null;\n  }\n  {\n    tab === \"BannedList\" ? /*#__PURE__*/_jsxDEV(BannedList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this) : null;\n  }\n  {\n    tab === \"UpdatedLogs\" ? /*#__PURE__*/_jsxDEV(UpdatedLogs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 28\n    }, this) : null;\n  }\n  {\n    /* Report display and page calculation */\n  }\n  const cardsPerPage = 8;\n  const pagesVisited = pageNum * cardsPerPage;\n  const AllReports = profile.slice(pagesVisited, pagesVisited + cardsPerPage).map(profile => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nested\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ID: \", profile.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"mm dd yy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.thumbnailUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nested\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"name:\", profile.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"status: n/a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"location: n/a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn sm\",\n          children: [\" edit \", /*#__PURE__*/_jsxDEV(FaPen, {\n            size: \"1.5em\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 48\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  });\n  const pageCount = Math.ceil(profile.length / cardsPerPage);\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNum(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [AllReports, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationBtns\",\n      previousLinkClassName: \"\",\n      nextLinkClassName: \"\",\n      disabledClassName: \"\",\n      activeClassName: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AllList, \"T1hMiBjPPk4/SyktJ0ZWVjd5+1M=\");\n\n_c = AllList;\nexport default AllList;\n/*\r\n  <>\r\n  <div>\r\n    <h2>AllList</h2>\r\n\n    {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n    {status === \"error\" && <div>Error fetching data</div>}\r\n    {status === \"success\" && (\r\n      <div>\r\n        {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n      </div>\r\n    )}\r\n  </div>\r\n    <div>\r\n    <button onClick ={()=> setPageNum ((pageNum)=> pageNum-1)} \r\n    disabled={pageNum === 1 }> Prev </button>\r\n\r\n    <button onClick ={()=> setPageNum ((pageNum)=> pageNum+1)} \r\n    disabled={pageNum === 5 }> Next </button>\r\n    </div> \r\n  </>\r\n);   \r\n};\r\nexport default function Wrapped() {\r\nreturn (\r\n  <QueryClientProvider client={queryClient}>\r\n    <AllList />\r\n  </QueryClientProvider>\r\n);\r\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AllList\");","map":{"version":3,"sources":["D:/react-test/src/components/AllList.js"],"names":["react","FetchAllReports","React","useState","mockData","ReactPaginate","FaPen","WatchList","BannedList","UpdatedLogs","AllList","profile","setProfile","slice","pageNum","setPageNum","tab","setTab","cardsPerPage","pagesVisited","AllReports","map","id","thumbnailUrl","title","pageCount","Math","ceil","length","changePage","selected"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport FetchAllReports from \"./FetchAllReports\";\r\nimport React, { useState} from \"react\";\r\nimport mockData from \"../mockData.js\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {FaPen} from 'react-icons/fa';\r\n\r\nimport WatchList from \"./components/WatchList\";\r\nimport BannedList from \"./components/BannedList\";\r\nimport UpdatedLogs from \"./components/FetchUpdatedLogs\";\r\n\r\n\r\n\r\n/* \r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\r\n  return res.json();\r\n}\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n   console.log(\"data \", data, \"page\", pageNum);\r\n*/ \r\nfunction AllList() {\r\n  const [profile, setProfile]= useState(mockData.slice(0,100));\r\n  const [pageNum, setPageNum] = useState(0);\r\n\r\n  const [tab, setTab] = useState([]); //initial mount on page load\r\n  <ReportTabs setTab={setTab} />\r\n  \r\n  {tab === \"AllList\" ? <AllList /> : null}\r\n  {tab === \"WatchList\" ? <WatchList /> : null}\r\n  {tab === \"BannedList\" ? <BannedList /> : null}\r\n  {tab === \"UpdatedLogs\" ? <UpdatedLogs /> : null}\r\n\r\n{/* Report display and page calculation */}\r\n  const cardsPerPage = 8;             \r\n  const pagesVisited = pageNum * cardsPerPage;  \r\n  const AllReports = profile\r\n    .slice(pagesVisited, pagesVisited + cardsPerPage)\r\n    .map( (profile) => {\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"nested\">\r\n            <div>ID: {profile.id}</div>\r\n            <div>mm dd yy</div>\r\n         </div>\r\n         <img src = {profile.thumbnailUrl}/>\r\n         <div className=\"nested\">\r\n            <div>name:{profile.title} </div>\r\n            <div>status: n/a</div>\r\n         </div>\r\n\r\n         <div>Type</div>\r\n         <div>location: n/a</div>\r\n         <div>0</div>\r\n         <div><button className=\"btn sm\"> edit <FaPen size=\"1.5em\"/> </button></div>\r\n\r\n      </div>\r\n      ) \r\n    }) \r\n  \r\n      const pageCount = Math.ceil(profile.length/cardsPerPage)\r\n      const changePage =({selected}) => {\r\n        setPageNum(selected);\r\n      }\r\n\r\n     return (\r\n\r\n      \r\n      <div>{AllReports}\r\n\r\n        {/* Pagination functionality*/}\r\n        <ReactPaginate\r\n          previousLabel={\"prev\"}\r\n          nextLabel={\"next\"}\r\n          pageCount={pageCount}\r\n          onPageChange={changePage}\r\n      \r\n          containerClassName={\"paginationBtns\"}\r\n          previousLinkClassName={\"\"}\r\n          nextLinkClassName={\"\"}\r\n          disabledClassName={\"\"}\r\n          activeClassName={\"\"}\r\n        />\r\n      </div>\r\n    )\r\n\r\n  \r\n  }\r\n\r\n\r\n  export default AllList;\r\n\r\n  /*\r\n    <>\r\n    <div>\r\n      <h2>AllList</h2>\r\n \r\n      {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n      {status === \"error\" && <div>Error fetching data</div>}\r\n      {status === \"success\" && (\r\n        <div>\r\n          {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n    <div>\r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum-1)} \r\n      disabled={pageNum === 1 }> Prev </button>\r\n  \r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum+1)} \r\n      disabled={pageNum === 5 }> Next </button>\r\n      </div> \r\n    </>\r\n  );   \r\n};\r\n\r\nexport default function Wrapped() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AllList />\r\n    </QueryClientProvider>\r\n  );\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}