{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-Portfolio\\\\react-test\\\\src\\\\components\\\\AllList.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport PrevReport from \"./PrevAllReport\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\nconst fetchWanted = async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/photos\");\n  return res.json();\n};\n\nconst AllList = () => {\n  _s();\n\n  const {\n    data,\n    status\n  } = useQuery(\"watch\", fetchWanted); //console.log(\"data \", data, \"status\", status);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AllList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading. Please Wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 30\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(PrevAllReport, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllList, \"r91jLNwsqTqZNm64JWU7RjPAH/8=\", false, function () {\n  return [useQuery];\n});\n\n_c = AllList;\nexport default function Wrapped() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(AllList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Wrapped;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AllList\");\n$RefreshReg$(_c2, \"Wrapped\");","map":{"version":3,"sources":["D:/My-Portfolio/react-test/src/components/AllList.js"],"names":["react","PrevReport","QueryClient","QueryClientProvider","useQuery","queryClient","fetchWanted","res","fetch","json","AllList","data","status","map","item","id","Wrapped"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,aAA3D;;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;;AAEA,MAAMI,WAAW,GAAG,YAAY;AAC9B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAAvB;AACA,SAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBR,QAAQ,CAAC,OAAD,EAAUE,WAAV,CAAjC,CADoB,CAEpB;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGM,MAAM,KAAK,SAAX,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF3B,EAGGA,MAAM,KAAK,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHzB,EAIGA,MAAM,KAAK,SAAX,iBACC;AAAA,gBACGD,IAAI,CAACE,GAAL,CAAUC,IAAD,iBAAW,QAAC,aAAD;AAA6B,QAAA,IAAI,EAAEA;AAAnC,SAAoBA,IAAI,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,cAApB;AADH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBD;;GAAML,O;UACqBN,Q;;;KADrBM,O;AAkBN,eAAe,SAASM,OAAT,GAAmB;AAChC,sBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEX,WAA7B;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MANuBW,O","sourcesContent":["import react from \"react\";\r\nimport PrevReport from \"./PrevAllReport\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst fetchWanted = async () => {\r\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/photos\");\r\n  return res.json();\r\n};\r\n\r\nconst AllList = () => {\r\n  const { data, status } = useQuery(\"watch\", fetchWanted);\r\n  //console.log(\"data \", data, \"status\", status);\r\n  return (\r\n    <div>\r\n      <h2>AllList</h2>\r\n      {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n      {status === \"error\" && <div>Error fetching data</div>}\r\n      {status === \"success\" && (\r\n        <div>\r\n          {data.map((item) => (<PrevAllReport key={item.id} item={item} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Wrapped() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AllList />\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}