{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-test\\\\src\\\\components\\\\AllList.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport FetchAllReports from \"./FetchAllReports\";\nimport React, { useState } from \"react\";\nimport { QueryClient, QueryClientProvider, usePaginatedQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchAll = async page => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/photos/?page=${page}'); // const res = await fetch('https://swapi.dev/api/planets/page=${page}');\n\n  return res.json();\n};\n\nconst AllList = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const {\n    resolvedData,\n    latestData,\n    status\n  } = usePaginatedQuery(['planets', page], () => fetchAll(page)); //console.log(\"data \", data, \"status\", status);\n  // const {data, status} = useQuery(['all', page], ()=>fetchAll(page));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AllList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading. Please Wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 32\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 30\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: resolvedData.map(item => /*#__PURE__*/_jsxDEV(FetchAllReports, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllList, \"T2XWkzmjqrFlwqB/MkD/1PiHTlk=\", false, function () {\n  return [usePaginatedQuery];\n});\n\n_c = AllList;\nexport default function Wrapped() {\n  return /*#__PURE__*/_jsxDEV(AllList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n_c2 = Wrapped;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AllList\");\n$RefreshReg$(_c2, \"Wrapped\");","map":{"version":3,"sources":["D:/react-test/src/components/AllList.js"],"names":["react","FetchAllReports","React","useState","QueryClient","QueryClientProvider","usePaginatedQuery","fetchAll","page","res","fetch","json","AllList","setPage","resolvedData","latestData","status","map","item","id","Wrapped"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,iBAA3C,QAAoE,aAApE;;;AAIA,MAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2DAAD,CAAvB,CAD+B,CAEhC;;AACC,SAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,CAJD;;AAMA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA;AAA5B,MAAuCV,iBAAiB,CAAC,CAAC,SAAD,EAAYE,IAAZ,CAAD,EAAmB,MAAMD,QAAQ,CAACC,IAAD,CAAjC,CAA9D,CAFoB,CAIpB;AACD;;AACC,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGQ,MAAM,KAAK,SAAX,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAL3B,EAMGA,MAAM,KAAK,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANzB,EAOGA,MAAM,KAAK,SAAX,iBACC;AAAA,gBACGF,YAAY,CAACG,GAAb,CAAkBC,IAAD,iBAAW,QAAC,eAAD;AAA+B,QAAA,IAAI,EAAEA;AAArC,SAAsBA,IAAI,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA,cAA5B;AADH;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtBD;;GAAMP,O;UAEyCN,iB;;;KAFzCM,O;AAwBN,eAAe,SAASQ,OAAT,GAAmB;AAChC,sBAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAKD;MANuBA,O","sourcesContent":["import react from \"react\";\r\nimport FetchAllReports from \"./FetchAllReports\";\r\nimport React, { useState } from \"react\";\r\nimport { QueryClient, QueryClientProvider, usePaginatedQuery } from \"react-query\";\r\n\r\n\r\n\r\nconst fetchAll = async (page) => {\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/photos/?page=${page}');\r\n // const res = await fetch('https://swapi.dev/api/planets/page=${page}');\r\n  return res.json();\r\n};\r\n\r\nconst AllList = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { resolvedData, latestData, status } = usePaginatedQuery(['planets', page],() => fetchAll(page));\r\n\r\n  //console.log(\"data \", data, \"status\", status);\r\n // const {data, status} = useQuery(['all', page], ()=>fetchAll(page));\r\n  return (\r\n    <div>\r\n      <h2>AllList</h2>\r\n      \r\n\r\n\r\n      {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n      {status === \"error\" && <div>Error fetching data</div>}\r\n      {status === \"success\" && (\r\n        <div>\r\n          {resolvedData.map((item) => (<FetchAllReports key={item.id} item={item} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Wrapped() {\r\n  return (\r\n  \r\n      <AllList />\r\n  \r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}