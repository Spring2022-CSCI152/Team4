{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-test\\\\src\\\\components\\\\AllList.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport FetchAllReports from \"./FetchAllReports\";\nimport React, { useState } from \"react\";\nimport mockData from \"../mockData.js\";\nimport ReactPaginate from \"react-paginate\";\nimport { FaPen } from 'react-icons/fa';\n/* \r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\r\n  return res.json();\r\n}\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n   console.log(\"data \", data, \"page\", pageNum);\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllList() {\n  _s();\n\n  const [profile, setProfile] = useState(mockData.slice(0, 100));\n  const [pageNum, setPageNum] = useState(0);\n  const cardsPerPage = 8;\n  const pagesVisited = pageNum * cardsPerPage;\n  const AllReports = profile.slice(pagesVisited, pagesVisited + cardsPerPage).map(profile => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"ID: \", profile.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this), \"mm dd yy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.thumbnailUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name:\", profile.title, \" status: n/a\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txtCenter\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txtCenter\",\n        children: \"location: n/a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txtCenter\",\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn sm\",\n        children: [\" edit \", /*#__PURE__*/_jsxDEV(FaPen, {\n          size: \"1.5em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 43\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  });\n  const pageCount = Math.ceil(profile.length / cardsPerPage);\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNum(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [AllReports, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      pageCount: pageCount,\n      onPageChange: changePage //pagination styles \n      ,\n      containerClassName: \"paginationBtns\",\n      previousLinkClassName: \"\",\n      nextLinkClassName: \"\",\n      disabledClassName: \"\",\n      activeClassName: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 14\n  }, this);\n}\n\n_s(AllList, \"X9Hn4qVjd+gLW8dy0qlqC29p7H8=\");\n\n_c = AllList;\nexport default AllList;\n/*\r\n  <>\r\n  <div>\r\n    <h2>AllList</h2>\r\n\n    {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n    {status === \"error\" && <div>Error fetching data</div>}\r\n    {status === \"success\" && (\r\n      <div>\r\n        {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n      </div>\r\n    )}\r\n  </div>\r\n    <div>\r\n    <button onClick ={()=> setPageNum ((pageNum)=> pageNum-1)} \r\n    disabled={pageNum === 1 }> Prev </button>\r\n\r\n    <button onClick ={()=> setPageNum ((pageNum)=> pageNum+1)} \r\n    disabled={pageNum === 5 }> Next </button>\r\n    </div> \r\n  </>\r\n);   \r\n};\r\nexport default function Wrapped() {\r\nreturn (\r\n  <QueryClientProvider client={queryClient}>\r\n    <AllList />\r\n  </QueryClientProvider>\r\n);\r\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AllList\");","map":{"version":3,"sources":["D:/react-test/src/components/AllList.js"],"names":["react","FetchAllReports","React","useState","mockData","ReactPaginate","FaPen","AllList","profile","setProfile","slice","pageNum","setPageNum","cardsPerPage","pagesVisited","AllReports","map","id","thumbnailUrl","title","pageCount","Math","ceil","length","changePage","selected"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,KAAR,QAAoB,gBAApB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBN,QAAQ,CAACC,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,GAAjB,CAAD,CAArC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMU,YAAY,GAAG,CAArB;AACA,QAAMC,YAAY,GAAGH,OAAO,GAAGE,YAA/B;AACA,QAAME,UAAU,GAAGP,OAAO,CACvBE,KADgB,CACVI,YADU,EACIA,YAAY,GAAGD,YADnB,EAEhBG,GAFgB,CAEVR,OAAD,IAAa;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEC;AAAA,2BAAUA,OAAO,CAACS,EAAlB,oBAAsB;AAAA;AAAA;AAAA;AAAA,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAK,QAAA,GAAG,EAAIT,OAAO,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAA,4BAAWV,OAAO,CAACW,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAMC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,eAOC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD,eAQC;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,0CAAiC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAhBgB,CAAnB;AAkBI,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUd,OAAO,CAACe,MAAR,GAAeV,YAAzB,CAAlB;;AACA,QAAMW,UAAU,GAAE,QAAgB;AAAA,QAAf;AAACC,MAAAA;AAAD,KAAe;AAChCb,IAAAA,UAAU,CAACa,QAAD,CAAV;AACD,GAFD;;AAID,sBAAQ;AAAA,eAAMV,UAAN,eAGP,QAAC,aAAD;AACE,MAAA,aAAa,EAAE,MADjB;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,SAAS,EAAEK,SAHb;AAIE,MAAA,YAAY,EAAEI,UAJhB,CAKA;AALA;AAME,MAAA,kBAAkB,EAAE,gBANtB;AAOE,MAAA,qBAAqB,EAAE,EAPzB;AAQE,MAAA,iBAAiB,EAAE,EARrB;AASE,MAAA,iBAAiB,EAAE,EATrB;AAUE,MAAA,eAAe,EAAE;AAVnB;AAAA;AAAA;AAAA;AAAA,YAHO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAkBF;;GA9CMjB,O;;KAAAA,O;AAiDP,eAAeA,OAAf;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import react from \"react\";\r\nimport FetchAllReports from \"./FetchAllReports\";\r\nimport React, { useState} from \"react\";\r\nimport mockData from \"../mockData.js\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {FaPen} from 'react-icons/fa';\r\n\r\n\r\n\r\n/* \r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\r\n  return res.json();\r\n}\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n   console.log(\"data \", data, \"page\", pageNum);\r\n*/ \r\nfunction AllList() {\r\n  const [profile, setProfile]= useState(mockData.slice(0,100));\r\n  const [pageNum, setPageNum] = useState(0)\r\n  const cardsPerPage = 8;             \r\n  const pagesVisited = pageNum * cardsPerPage;  \r\n  const AllReports = profile\r\n    .slice(pagesVisited, pagesVisited + cardsPerPage)\r\n    .map( (profile) => {\r\n      return (\r\n        <div className=\"card\">\r\n\r\n         <div>ID: {profile.id} <br></br>mm dd yy</div>\r\n         <img src = {profile.thumbnailUrl}/>\r\n         <div>name:{profile.title} status: n/a</div>\r\n         <div className=\"txtCenter\">Type</div>\r\n         <div className=\"txtCenter\">location: n/a</div>\r\n         <div className=\"txtCenter\">0</div>\r\n         <button className=\"btn sm\"> edit <FaPen size=\"1.5em\"/> </button>\r\n\r\n      </div>\r\n      ) \r\n    }) \r\n  \r\n      const pageCount = Math.ceil(profile.length/cardsPerPage)\r\n      const changePage =({selected}) => {\r\n        setPageNum(selected);\r\n      }\r\n\r\n     return (<div>{AllReports}\r\n\r\n  \r\n      <ReactPaginate\r\n        previousLabel={\"prev\"}\r\n        nextLabel={\"next\"}\r\n        pageCount={pageCount}\r\n        onPageChange={changePage}\r\n      //pagination styles \r\n        containerClassName={\"paginationBtns\"}\r\n        previousLinkClassName={\"\"}\r\n        nextLinkClassName={\"\"}\r\n        disabledClassName={\"\"}\r\n        activeClassName={\"\"}\r\n      />\r\n    </div>)\r\n\r\n  \r\n  }\r\n\r\n\r\n  export default AllList;\r\n\r\n  /*\r\n    <>\r\n    <div>\r\n      <h2>AllList</h2>\r\n \r\n      {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n      {status === \"error\" && <div>Error fetching data</div>}\r\n      {status === \"success\" && (\r\n        <div>\r\n          {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n    <div>\r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum-1)} \r\n      disabled={pageNum === 1 }> Prev </button>\r\n  \r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum+1)} \r\n      disabled={pageNum === 5 }> Next </button>\r\n      </div> \r\n    </>\r\n  );   \r\n};\r\n\r\nexport default function Wrapped() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AllList />\r\n    </QueryClientProvider>\r\n  );\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}