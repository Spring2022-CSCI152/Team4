{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-test\\\\src\\\\components\\\\AllList.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport FetchAllReports from \"./FetchAllReports\";\nimport React, { useState } from \"react\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport mockData from \".D:\\react-test\\src\\mockData.js\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n/* \r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\r\n  return res.json();\r\n}\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n   console.log(\"data \", data, \"page\", pageNum);\r\n*/\n\nfunction AllList() {\n  _s();\n\n  const [displayCards, setDisplayCards] = useState(mockData.slice(0, 10));\n  const [pageNum, setPageNum] = useState(0);\n  const cardsPerPage = 8;\n  const pagesVisited = pageNum * cardsPerPage;\n  const displayReport = displayCards.slice(pagesVisited, pagesVisited + cardsPerPage).map(displayCards => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayCards.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayReport\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n\n_s(AllList, \"NuG/AJeKzGdZdT12NE33F/30NZk=\");\n\n_c = AllList;\nexport default AllList;\n/*\r\n  <>\r\n  <div>\r\n    <h2>AllList</h2>\r\n\n    {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n    {status === \"error\" && <div>Error fetching data</div>}\r\n    {status === \"success\" && (\r\n      <div>\r\n        {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n      </div>\r\n    )}\r\n  </div>\r\n    <div>\r\n    <button onClick ={()=> setPageNum ((pageNum)=> pageNum-1)} \r\n    disabled={pageNum === 1 }> Prev </button>\r\n\r\n    <button onClick ={()=> setPageNum ((pageNum)=> pageNum+1)} \r\n    disabled={pageNum === 5 }> Next </button>\r\n    </div> \r\n  </>\r\n);   \r\n};\r\nexport default function Wrapped() {\r\nreturn (\r\n  <QueryClientProvider client={queryClient}>\r\n    <AllList />\r\n  </QueryClientProvider>\r\n);\r\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AllList\");","map":{"version":3,"sources":["D:/react-test/src/components/AllList.js"],"names":["react","FetchAllReports","React","useState","QueryClient","QueryClientProvider","useQuery","mockData","ReactPaginate","queryClient","AllList","displayCards","setDisplayCards","slice","pageNum","setPageNum","cardsPerPage","pagesVisited","displayReport","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,aAA3D;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,WAAW,GAAG,IAAIL,WAAJ,EAApB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASM,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCT,QAAQ,CAACI,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,EAAjB,CAAD,CAA/C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMa,YAAY,GAAG,CAArB;AACA,QAAMC,YAAY,GAAGH,OAAO,GAAGE,YAA/B;AACA,QAAME,aAAa,GAAGP,YAAY,CAC/BE,KADmB,CACbI,YADa,EACCA,YAAY,GAAGD,YADhB,EAEnBG,GAFmB,CAEbR,YAAD,IAAkB;AAAC,wBAAQ;AAAA,gBAAMA,YAAY,CAACS;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAR;AAAuC,GAF5C,CAAtB;AAGE,sBAAO;AAAA,cAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;;GAVMR,O;;KAAAA,O;AAaT,eAAeA,OAAf;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import react from \"react\";\r\nimport FetchAllReports from \"./FetchAllReports\";\r\nimport React, { useState} from \"react\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\nimport mockData from \".D:\\react-test\\src\\mockData.js\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\n\r\n/* \r\nconst fetchAll = async (pageNum) => {\r\n  const res = await fetch(`https://jsonplaceholder.typicode.com/photos/?_limit=8&_page=${pageNum}`);\r\n  return res.json();\r\n}\r\n\r\nconst AllList = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const { data, status } = useQuery(['all', pageNum],() => fetchAll(pageNum));\r\n   console.log(\"data \", data, \"page\", pageNum);\r\n*/ \r\nfunction AllList() {\r\n  const [displayCards, setDisplayCards]= useState(mockData.slice(0,10))\r\n  const [pageNum, setPageNum] = useState(0)\r\n  const cardsPerPage = 8;             \r\n  const pagesVisited = pageNum * cardsPerPage;  \r\n  const displayReport = displayCards\r\n    .slice(pagesVisited, pagesVisited + cardsPerPage)\r\n    .map( (displayCards) => {return (<div>{displayCards.id}</div>) })\r\n    return <div>{displayReport}</div>\r\n\r\n  }\r\n\r\n\r\nexport default AllList;\r\n\r\n  /*\r\n    <>\r\n    <div>\r\n      <h2>AllList</h2>\r\n \r\n      {status === \"loading\" && <div>Loading. Please Wait</div>}\r\n      {status === \"error\" && <div>Error fetching data</div>}\r\n      {status === \"success\" && (\r\n        <div>\r\n          {data.map((item) => (<FetchAllReports key={item.id} item={item} />))}\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n    <div>\r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum-1)} \r\n      disabled={pageNum === 1 }> Prev </button>\r\n  \r\n      <button onClick ={()=> setPageNum ((pageNum)=> pageNum+1)} \r\n      disabled={pageNum === 5 }> Next </button>\r\n      </div> \r\n    </>\r\n  );   \r\n};\r\n\r\nexport default function Wrapped() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <AllList />\r\n    </QueryClientProvider>\r\n  );\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}